[1/10] Performing build step for 'bootloader'
[1/1] cd /home/wangye/esp/esp-project/myproject/build/bootloader/esp-idf/esptool_py && /home/wangye/.espressif/python_env/idf5.4_py3.8_env/bin/python /home/wangye/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/wangye/esp/esp-project/myproject/build/bootloader/bootloader.bin
Bootloader binary size 0x5210 bytes. 0x2df0 bytes (36%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/myproject.c.obj
[3/8] Linking C static library esp-idf/main/libmain.a
[4/8] Generating ld/sections.ld
[5/8] Building C object CMakeFiles/lcd.elf.dir/project_elf_src_esp32s3.c.obj
[6/8] Linking CXX executable lcd.elf
[7/8] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /home/wangye/esp/esp-project/myproject/build/lcd.bin
[8/8] cd /home/wangye/esp/esp-project/myproject/build/esp-idf/esptool_py && /home/wangye/.espressif/python_env/idf5.4_py3.8_env/bin/python /home/wangye/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/wangye/esp/esp-project/myproject/build/partition_table/partition-table.bin /home/wangye/esp/esp-project/myproject/build/lcd.bin
lcd.bin binary size 0x45840 bytes. Smallest app partition is 0x100000 bytes. 0xba7c0 bytes (73%) free.
